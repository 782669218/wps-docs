{
    "_id": {
        "$oid": "6030c30f27e62d56b849b97a"
    },
    "name": "CommandBarControl",
    "summary": "<p style=\"font-family:&quot;white-space:normal;\">\n\t\t在编写处理自定义命令栏控件的 Visual Basic 代码时，请使用&nbsp;<b>CommandBarButton</b>、<b>CommandBarComboBox</b>&nbsp;和&nbsp;<b>CommandBarPopup</b>&nbsp;对象。在编写用于处理容器应用程序中的内置控件的代码时，如果该控件不能用上述三个对象中的任意一个来代表，则可以使用&nbsp;<b>CommandBarControl</b>&nbsp;对象。使用&nbsp;<b>Controls</b>(<i>index</i>) 可返回一个&nbsp;<b>CommandBarControl</b>&nbsp;对象，其中&nbsp;<i>index</i>&nbsp;是控件的索引号。（该控件的&nbsp;<b>Type</b>&nbsp;属性必须是&nbsp;<b>msoControlLabel</b>、<b>msoControlExpandingGrid</b>、<b>msoControlSplitExpandingGrid</b>、<b>msoControlGrid</b>&nbsp;或&nbsp;<b>msoControlGauge</b>）。声明为&nbsp;<b>CommandBarControl</b>&nbsp;的变量可赋予&nbsp;<b>CommandBarButton</b>、<b>CommandBarComboBox</b>&nbsp;和&nbsp;<b>CommandBarPopup</b>&nbsp;值\n\t</p>",
    "description": "<p><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">代表一个命令栏控件。</span><b style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">CommandBarControl</b><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">&nbsp;对象是&nbsp;</span><b style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">CommandBarControls</b><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">&nbsp;集合的成员。</span><b style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">CommandBarControl</b><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">&nbsp;对象与&nbsp;</span><b style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">CommandBarButton</b><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">、</span><b style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">CommandBarComboBox</b><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">&nbsp;和&nbsp;</span><b style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">CommandBarPopup</b><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">&nbsp;对象具有同样的属性和方法。</span></p>",
    "category": "KSO",
    "properties": [
        {
            "name": "Caption",
            "summary": "",
            "description": "<p><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">获取或设置命令栏控件的标题文字。可读写。</span> </p>",
            "examples": "<div id=\"vstable\"><table width=\"100%\"><tbody><tr><th>示例代码<span class=\"copy\" onclick=\"copyCode(this)\">复制</span></th></tr><tr><td><pre><code><span class=\"hljs-comment\">/*\n本示例在自定义命令栏中添加一个带拼写检查按钮图标的命令栏控件，然后将其标题设置为“Spelling checker”。\n*/</span>\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">test</span>(<span class=\"hljs-params\"></span>)\n{\n\t<span class=\"hljs-keyword\">let</span> myBar = <span class=\"hljs-title class_\">Application</span>.<span class=\"hljs-property\">ActiveDocument</span>.<span class=\"hljs-property\">CommandBars</span>.<span class=\"hljs-title class_\">Add</span>(<span class=\"hljs-string\">\"Custom\"</span>, Application.Enum.msoBarTop, <span class=\"hljs-literal\">true</span>)\n\tmyBar.<span class=\"hljs-property\">Visible</span> = <span class=\"hljs-literal\">true</span> \n\t<span class=\"hljs-keyword\">let</span> myControl = myBar.<span class=\"hljs-property\">Controls</span>.<span class=\"hljs-title class_\">Add</span>(Application.Enum.msoControlButton, <span class=\"hljs-number\">2</span>)\n\tmyControl.<span class=\"hljs-property\">DescriptionText</span> = <span class=\"hljs-string\">\"Starts the spelling checker\"</span>\n \tmyControl.<span class=\"hljs-property\">Caption</span> = <span class=\"hljs-string\">\"Spelling checker\"</span>\n}</code></pre></td></tr></tbody></table></div>",
            "parameters": [],
            "type": "",
            "value": "",
            "readonly": true
        },
        {
            "name": "DescriptionText",
            "summary": "<p><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">该说明不显示给用户，但有助于其他开发者将控件行为归档。</span> </p>",
            "description": "<p><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">获取或设置命令栏控件的说明。可读写。</span> </p>",
            "examples": "<div id=\"vstable\"><table width=\"100%\"><tbody><tr><th>示例代码<span class=\"copy\" onclick=\"copyCode(this)\">复制</span></th></tr><tr><td><pre><code><span class=\"hljs-comment\">/*\n本示例在自定义命令栏中添加一个带控件行为说明的控件。\n*/</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">test</span>(<span class=\"hljs-params\"></span>)\n{\n\t<span class=\"hljs-keyword\">let</span> commandbars = <span class=\"hljs-title class_\">Application</span>.<span class=\"hljs-property\">ActiveDocument</span>.<span class=\"hljs-property\">CommandBars</span>\n\t<span class=\"hljs-keyword\">let</span> myBar = commandbars.<span class=\"hljs-title class_\">Add</span>(<span class=\"hljs-string\">\"Custom\"</span>, Application.Enum.msoBarTop, <span class=\"hljs-literal\">true</span>)\n\tmyBar.<span class=\"hljs-property\">Visible</span> = <span class=\"hljs-literal\">true</span> \n\t<span class=\"hljs-keyword\">let</span> myControl = myBar.<span class=\"hljs-property\">Controls</span>.<span class=\"hljs-title class_\">Add</span>(Application.Enum.msoControlButton, commandbars.<span class=\"hljs-title class_\">Item</span>(<span class=\"hljs-string\">\"Standard\"</span>).<span class=\"hljs-property\">Controls</span>.<span class=\"hljs-title class_\">Item</span>(<span class=\"hljs-string\">\"Paste\"</span>).<span class=\"hljs-property\">Id</span>)\n\tmyControl.<span class=\"hljs-property\">DescriptionText</span> = <span class=\"hljs-string\">\"Pastes the contents of the Clipboard\"</span>\n        myControl.<span class=\"hljs-property\">Caption</span> = <span class=\"hljs-string\">\"Paste\"</span>\n}</code></pre></td></tr></tbody></table></div>",
            "parameters": [],
            "type": "",
            "value": "",
            "readonly": true
        },
        {
            "name": "Enabled",
            "summary": "<p style=\"font-family:&quot;white-space:normal;\">\n\t\t对于命令栏，如果将该属性设置为&nbsp;<b>True</b>，则该命令栏的名称将出现在可用命令栏列表中。\n\t</p>\n\t<p style=\"font-family:&quot;white-space:normal;\">\n\t\t对于内置控件，如果将&nbsp;<b>Enabled</b>&nbsp;属性设置为&nbsp;<b>True</b>，则将由应用程序确定其状态。但如果将该属性设置为&nbsp;<b>False</b>，则强行禁用该控件。\n\t</p>",
            "description": "<p><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">获取或设置指定是否启用&nbsp;</span><b style=\"font-family:&quot;white-space:normal;\">CommandBarControl</b><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">&nbsp;的&nbsp;</span><b style=\"font-family:&quot;white-space:normal;\">Boolean</b><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">&nbsp;值。可读写。</span> </p>",
            "examples": "",
            "parameters": [],
            "type": "",
            "value": "",
            "readonly": true
        },
        {
            "name": "Id",
            "summary": "",
            "description": "<p><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">获取内置的&nbsp;</span><b style=\"font-family:&quot;white-space:normal;\">CommandBarControl</b><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">&nbsp;的 ID。只读。</span> </p>",
            "examples": "",
            "parameters": [],
            "type": "",
            "value": "",
            "readonly": true
        },
        {
            "name": "Tag",
            "summary": "",
            "description": "<p><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">获取或设置有关&nbsp;</span><b style=\"font-family:&quot;white-space:normal;\">CommandBarControl</b><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">&nbsp;的信息，例如，可作为过程参数的数据或用于识别该控件的信息。可读写。</span> </p>",
            "examples": "",
            "parameters": [],
            "type": "",
            "value": "",
            "readonly": true
        },
        {
            "name": "Visibl",
            "summary": "",
            "description": "<p><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">获取或设置&nbsp;</span><b style=\"font-family:&quot;white-space:normal;\">CommandBarControl</b><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">&nbsp;的&nbsp;</span><b style=\"font-family:&quot;white-space:normal;\">Visible</b><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">&nbsp;属性。如果&nbsp;</span><b style=\"font-family:&quot;white-space:normal;\">CommandBarControl</b><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">&nbsp;可见，则此属性为 </span><span style=\"font-family:white-space:normal;\"><b>true</b></span><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">。可读写。</span> </p>",
            "examples": "",
            "parameters": [],
            "type": "",
            "value": "",
            "readonly": true
        }
    ],
    "functions": [
        {
            "name": "Copy",
            "summary": "",
            "description": "<p><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">将一个命令栏控件复制到已有的命令栏中。</span></p>",
            "examples": "",
            "parameters": [
                {
                    "name": "Bar",
                    "type": "Variant",
                    "description": "一个代表目标命令栏的 CommandBar 对象。如果省略此参数，控件将被复制到它原来所在的命令栏中。",
                    "default": "",
                    "optional": true,
                    "nullable": ""
                },
                {
                    "name": "Before",
                    "type": "Variant",
                    "description": "一个指示新控件在命令栏上的位置的数值。新控件将插入到位于此位置的控件之前。如果省略此参数，控件将被复制到命令栏的末尾。",
                    "default": "",
                    "optional": true,
                    "nullable": ""
                }
            ],
            "returns": ""
        },
        {
            "name": "Delete",
            "summary": "",
            "description": "<p><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">将&nbsp;</span><b style=\"font-family:&quot;white-space:normal;\">CommandBarControl</b><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">&nbsp;对象从其集合中删除。</span> </p>",
            "examples": "",
            "parameters": [
                {
                    "name": "Temporary",
                    "type": "Variant",
                    "description": "如果为 true，则从当前会话中删除此控件。应用程序在下次会话中将再次显示该控件",
                    "default": "",
                    "optional": true,
                    "nullable": ""
                }
            ],
            "returns": ""
        },
        {
            "name": "Execute",
            "summary": "",
            "description": "<p><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">运行分配给指定&nbsp;</span><b style=\"font-family:&quot;white-space:normal;\">CommandBarControl</b><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">&nbsp;控件的过程或内置命令。</span> </p>",
            "examples": "<div id=\"vstable\"><table width=\"100%\"><tbody><tr><th>示例代码<span class=\"copy\" onclick=\"copyCode(this)\">复制</span></th></tr><tr><td><pre><code><span class=\"hljs-comment\">/*\n本 ET 示例创建一个命令栏，然后向其中添加内置命令栏按钮控件。该按钮将执行 ET AutoSum 函数。本示例使用 Execute 方法在显示该命令栏时计算选定单元格区域的总计。\n*/</span>\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">test</span>(<span class=\"hljs-params\"></span>)\n{\n\t<span class=\"hljs-keyword\">let</span> cmdBars = <span class=\"hljs-title class_\">Application</span>.<span class=\"hljs-property\">ActiveDocument</span>.<span class=\"hljs-property\">CommandBars</span>\n\t<span class=\"hljs-keyword\">let</span> cbrCustBar = cmdBars.<span class=\"hljs-title class_\">Add</span>(<span class=\"hljs-string\">\"Custom\"</span>)\n\t<span class=\"hljs-keyword\">let</span> ctlAutoSum = cbrCustBar.<span class=\"hljs-property\">Controls</span>.<span class=\"hljs-title class_\">Add</span>(Application.Enum.msoControlButton, cmdBars.<span class=\"hljs-title class_\">Item</span>(<span class=\"hljs-string\">\"Standard\"</span>).<span class=\"hljs-property\">Controls</span>.<span class=\"hljs-title class_\">Item</span>(<span class=\"hljs-string\">\"AutoSum\"</span>).<span class=\"hljs-property\">Id</span>)\n\tcbrCustBar.<span class=\"hljs-property\">Visible</span> = <span class=\"hljs-literal\">true</span> \n\tctlAutoSum.<span class=\"hljs-title class_\">Execute</span>()\n}</code></pre></td></tr></tbody></table></div>",
            "parameters": [],
            "returns": ""
        },
        {
            "name": "Move",
            "summary": "",
            "description": "<p><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">将指定的&nbsp;</span><b style=\"font-family:&quot;white-space:normal;\">CommandBarControl</b><span style=\"font-family:&quot;white-space:normal;background-color:#FFFFFF;\">&nbsp;移动到已有的命令栏。</span> </p>",
            "examples": "<div id=\"vstable\"><table width=\"100%\"><tbody><tr><th>示例代码<span class=\"copy\" onclick=\"copyCode(this)\">复制</span></th></tr><tr><td><pre><code><span class=\"hljs-comment\">/*\n本示例将名为 Custom 的命令栏上的第一个组合框控件移动到该命令栏上的第七个控件之前。本示例将 Tag 设置为“Selection box”并赋予控件较低的优先级，以便在一行容纳不下所有控件时将其隐藏。\n*/</span>\n<span class=\"hljs-keyword\">function</span> test\n{\n\t<span class=\"hljs-keyword\">let</span> allcontrols = <span class=\"hljs-title class_\">Application</span>.<span class=\"hljs-property\">ActiveDocument</span>.<span class=\"hljs-property\">CommandBars</span>.<span class=\"hljs-title class_\">Item</span>(<span class=\"hljs-string\">\"Custom\"</span>).<span class=\"hljs-property\">Controls</span>\n\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">1</span>; i &lt;= allControls.<span class=\"hljs-property\">Count</span>; i++){\n    <span class=\"hljs-keyword\">if</span>(allControls.<span class=\"hljs-title class_\">Item</span>(i).<span class=\"hljs-property\">Type</span> == Application.Enum.msoControlComboBox){\n        <span class=\"hljs-keyword\">let</span> newallcontrols = allControls.<span class=\"hljs-title class_\">Item</span>(i)\n            newallcontrols.<span class=\"hljs-title class_\">Move</span>(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-number\">7</span>)\n            newallcontrols.<span class=\"hljs-property\">Tag</span> = <span class=\"hljs-string\">\"Selection box\"</span>\n            newallcontrols.<span class=\"hljs-property\">Priority</span> = <span class=\"hljs-number\">5</span>\n        <span class=\"hljs-keyword\">break</span>;\n    }\n}\t\n}</code></pre></td></tr></tbody></table></div>",
            "parameters": [
                {
                    "name": "Bar",
                    "type": "Variant",
                    "description": "一个代表控件的目标命令栏的 Command 对象。如果忽略该参数，则控件将移动到当前所在命令栏的末端。",
                    "default": "",
                    "optional": true,
                    "nullable": ""
                },
                {
                    "name": "Before",
                    "type": "Variant",
                    "description": "表示控件位置的数字。控件将插到该位置的控件之前。如果忽略该参数，控件插入到同一命令栏。",
                    "default": "",
                    "optional": true,
                    "nullable": ""
                }
            ],
            "returns": ""
        }
    ]
}